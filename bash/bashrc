# If not running interactively, don't do anything
[[ $- != *i* ]] && return

eval $(dircolors)

hash nvim 2>/dev/null && VIM=nvim || VIM=vim

export XDG_CONFIG_HOME=$HOME/.config
export XDG_DATA_HOME=$HOME/.local/share
export XDG_CACHE_HOME=$HOME/.cache

# better font rendering in java apps
export _JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=lcd_hrgb -Dswing.aatext=true'
# fix java apps in xmonad
# export _JAVA_AWT_WM_NONREPARENTING=1
# export AWT_TOOLKIT=MToolkit
export EDITOR="vi"
export VISUAL=$VIM
export WINEARCH=win32

export MPD_HOST=$XDG_CACHE_HOME/mpd/socket

# path
# PATH="$HOME/bin:$PATH"

# prevent terminal from overwriting Ctrl-s shortcut
if tty -s ; then
    stty -ixon
    stty -ixoff
fi

# enable recursive globbing
shopt -s extglob
# cd when entering just a path
shopt -s autocd
# correnct minor errors in the spelling of directories
shopt -s cdspell
# check windows size after each command and update LINES & COLUMNS
# if necessary
shopt -s checkwinsize

# Append to ~/.bash_history instead of overwriting it -- this prevents
# terminals from overwriting one another's histories.
shopt -s histappend
# store multiline commands as single entries in history file
shopt -s cmdhist
# load 10000 last commands from history, if you need more just grep a file.
HISTSIZE=10000
# Don't truncate ~/.bash_history -- keep all your history, ever.
unset HISTFILESIZE
# Add a timestamp to each history entry.
# HISTTIMEFORMAT="%Y/%m/%d %H:%M:%S  "
# Don't remember trivial {1,2,3,4}-letter commands.
HISTIGNORE=?:??:???:????
HISTIGNORE=${HISTIGNORE}':z *:v *:j *:make*:history:clear:* --help:cd*:ipython*'
# ingore duplicates and commands starting with spacebar
HISTCONTROL=ignoreboth:erasedups

PROMPT_COMMAND="history -a"

[ -f /etc/bash_completion ] && source /etc/bash_completion
[ -f /usr/share/bash-completion/bash_completion ] && source /usr/share/bash-completion/bash_completion

# http://pempek.net/articles/2013/10/27/pretty-elided-shell-prompt/
PS1_PWD_MAX=10
__pwd_ps1() { echo -n $PWD | sed -e "s|${HOME}|~|" -e "s|\(/[^/]*/\).*\(/.\{${PS1_PWD_MAX}\}\)|\1…\2|"; }
source /usr/share/git-core/contrib/completion/git-prompt.sh 2>/dev/null
source /etc/bash_completion.d/git-prompt.sh 2>/dev/null

GIT_PS1_SHOWDIRTYSTATE=1
if [ "$TERM" != "linux" ]; then
    PS1='\[\033[0;97m\]$(__pwd_ps1)\[\033[0;93m\]$(__git_ps1 " (%s)")\[\033[0;34m\]❯\[\033[0m\] '
fi

# export _Z_DATA=$HOME/.z_data
export _Z_DATA=$XDG_DATA_HOME/z/data
[ -f ~/.z/z.sh ] && source ~/.z/z.sh

if [ -f ~/.fzf.bash ]; then
    source ~/.fzf.bash
    fd() {
        local dir
        dir=$(find ${1:-*} -path '*/\.*' -prune \
            -o -type d -print 2> /dev/null | fzf +m) && cd "$dir"
    }
    fda() {
        local dir
        dir=$(find ${1:-.} -type d 2> /dev/null | fzf +m) && cd "$dir"
    }
    v() {
        local files
        files=$(grep '^>' ~/.nviminfo | cut -c3- |
                while read line; do
                    [ -f "${line/\~/$HOME}" ] && echo "$line"
                done | fzf-tmux -d -m -q "$*" -1) && $VIM ${files//\~/$HOME}
    }
    unalias z 2> /dev/null
    j() {
        if [[ -z "$*" ]]; then
            cd "$(_z -l 2>&1 | fzf +s --tac | sed 's/^[0-9,.]* *//')"
        else
            _z "$@"
        fi
    }
fi

# # colored less output
# export LESS='-R '
# export LESS_TERMCAP_mb=$'\033[1;34m' # begin blinking
# export LESS_TERMCAP_md=$'\033[1;34m' # begin bold
# export LESS_TERMCAP_me=$'\033[0m'    # end mode
# export LESS_TERMCAP_se=$'\033[0m'    # end standout-mode
# export LESS_TERMCAP_so=$'\033[1;7m'  # begin standout-mode - info box
# export LESS_TERMCAP_ue=$'\033[0m'    # end underline
# export LESS_TERMCAP_us=$'\033[1;36m' # begin underline

# -- linux console colors (jwr dark)
# if [ "$TERM" = "linux" ]; then
#     echo -en "\e]P0000000" #black
#     echo -en "\e]P83d3d3d" #darkgrey
#     echo -en "\e]P18c4665" #darkred
#     echo -en "\e]P9bf4d80" #red
#     echo -en "\e]P2287373" #darkgreen
#     echo -en "\e]PA53a6a6" #green
#     echo -en "\e]P37c7c99" #brown
#     echo -en "\e]PB9e9ecb" #yellow
#     echo -en "\e]P4395573" #darkblue
#     echo -en "\e]PC477ab3" #blue
#     echo -en "\e]P55e468c" #darkmagenta
#     echo -en "\e]PD7e62b3" #magenta
#     echo -en "\e]P631658c" #darkcyan
#     echo -en "\e]PE6096bf" #cyan
#     echo -en "\e]P7899ca1" #lightgrey
#     echo -en "\e]PFc0c0c0" #white
#     clear # bring us back to default input colours
# fi

mkcd () { mkdir -p "$*" && cd "$*"; }
md () { mkdir -p "$*" && cd "$*"; }
# create & change directory
ccd () { mkdir -p "$*" && cd "$*"; }
mcd () { mkdir -p "$*" && cd "$*"; }

psgrep() { ps aux | grep -v grep | grep "$@" -i --color=auto; }

# find simplified
fnd() {
    if [ $# -eq 1 ]; then
        find . -iname "*$**" 2> /dev/null
    else
        find "$1" -iname "*${*:2}*" 2>/dev/null
    fi
}

# remove recursively
# always ask before deleting
rmr() {
    if [ $# -eq 1 ]; then
        find . -iname "*$**" -prune -exec rm -ir {} \;
    else
        find "$1" -iname "*${*:2}*" -prune -exec rm -ir {} \;
    fi
}

# remove recursively
# don't ask before deleting
rmrf() {
    if [ $# -eq 1 ]; then
        find . -iname "*$**" -prune -exec rm -r {} \;
    else
        find "$1" -iname "*${*:2}*" -prune -exec rm -r {} \;
    fi
}

# pacman with sudo
pacman() {
    case $1 in
        -S | -D | -S[^ghilps]* | -R* | -U*)
            LC_ALL=C /usr/bin/sudo /usr/bin/pacman "$@" ;;
    *)      LC_ALL=C /usr/bin/pacman "$@" ;;
    esac
}

yt() { mpv $@ 2>/dev/null 1>&2 & disown; }

nohist() { unset HISTFILE; }
hsync() { history -a && history -n; }

# transmission helpers
trl() { transmission-remote -l; }
trd() { transmission-remote -t $1 --remove-and-delete; }
trr() { transmission-remote -t $1 --remove; }
tri() { transmission-remote -t $1 --info; }

# aliases
alias dmesg='dmesg --color'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

# ls
alias ls='ls -hF --color=auto'
alias ll='ls -l --group-directories-first'
alias la='ll -A'
alias lA='ls -A --group-directories-first'
# list hidden files only
alias lh='ls -d .??*'

# cd
alias ..='cd ..'  # redundant with autocd
alias ...='cd ../..'

alias su='su -'
alias ping='ping -c 3'
alias mkdir='mkdir -p -v'
alias df='df -h'
alias du='du -c -h'

# safety features
hash trash 2>/dev/null && alias rm='trash' || alias rm='rm -I'
alias ln='ln -i'
alias chown='chown --preserve-root'
alias chmod='chmod --preserve-root'
alias chgrp='chgrp --preserve-root'

# clear screen for real (does not work in tmux)
alias cls=' echo -ne "\033c"'

[ "$IS_NVIM" ] && alias vim='nvim'
# alias tmux='TERM=screen-256color tmux'
alias tm='tmux attach || tmux new'

alias ncmpcpp='ncmpcpp -c $XDG_CONFIG_HOME/ncmpcpp/config'
